1. SELECT *
   FROM Khang
   WHERE lastname = 'Nguyen';

2.select, from, where Greater, Lesser, Equal, LIKE, NOT LIKE, OR
So From Whatever in the table using Gel(>,=,<) for the comparision for exact numbers or string and using Lets(LIKE) Not 100 % sure to Locate (NOT LIKE with the %)

3. SELECT * FROM dogs;
Display the name, gender, and age of all dogs that are part Labrador.
SELECT  name, gender, age
FROM dogs;

Display the ids of all dogs that are under 1 year old.
SELECT id
FROM dogs
WHERE age <= 1;

Display the name and age of all dogs that are female and over 35lbs.
SELECT name, age 
FROM dogs
WHERE gender = 'F' AND weight >= 35;

Display all of the information about all dogs that are not Shepherd mixes.
SELECT *
FROM dogs
WHERE breed NOT LIKE '%shepherd%';

Display the id, age, weight, and breed of all dogs that are either over 60lbs or Great Danes.
SELECT id, age, weight, breed 
FROM dogs
WHERE weight >= 60 OR name LIKE 'great dane';

4. 

SELECT name, adoption_date FROM cats;

name	adoption_date
Mushi	2016-03-22T00:00:00.000Z
Seashell	null
Azul	2016-04-17T00:00:00.000Z
Victoire	2016-09-01T00:00:00.000Z
Nala	null

SELECT name, age FROM cats;

name	age
Mushi	1
Seashell	7
Azul	3
Victoire	7
Nala	1

5.
Display all the information about all of the available cats.
SELECT * FROM cats;

Choose one cat of each age to show to potential adopters.
SELECT *
FROM cats
WHERE id <= 3;

2nd solve which i use an ouside source
SELECT *
FROM cats AS t1

JOIN (SELECT age,
             
	max(id) as id
      
	FROM cats
      
	GROUP BY age
) t2

ON t1.id = t2.id

Find all of the names of the cats, so you don’t choose duplicate names for new cats.
SELECT DISTINCT name
FROM cats;

6.
Greater than, used when comparing 2 values: '>'
Less than, used when comparing 2 values: '<'
Equal to, used when comparing 2 values: '='
Less than or equal to, used when comparing 2 values: '<='
Greater than or equal to, used when comparing 2 values: '>='
Not equal to, used when comparing 2 values: '!='
Greater than or less than, used when comparing 2 values: '<>'
Used to pattern match a stringL 'LIKE'
Implemented like "a BETWEEN x AND y", this is equivalent to "a >= x AND a <= y": BETWEEN
Used in the format "expression IS TRUE" when the input could be null. Always returns either true or false. IS TRUE / IS FALSE
Determines if the contents of a cell are null. Can be used in conjunction with "NOT". IS NULL
Requires both expressions to be true for the row to be returned. AND
Requires one of the expressions to be true for the row to be returned. OR
Requires the expression to be false for the row to be returned. NOT

7. 
SELECT name 
FROM cats 
WHERE gender = 'F';

name
Seashell
Nala

SELECT name FROM cats WHERE age <> 3;

name
Mushi
Seashell
Victoire
Nala

SELECT id FROM cats WHERE name != 'Mushi' AND gender = 'M';

id
3
4

